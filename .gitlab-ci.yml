variables:
  GIT_SUBMODULE_STRATEGY: recursive

compile-autoref:
  script:
    - mkdir -p build
    - cd build
    - cmake -GNinja ..
    - cmake --build .
  stage: build
  cache:
    # Increase the number in the cache key to start with
    # a fresh build cache. This is only useful in case of
    # build system bug and/or updates of ExternalProjects!
    key: "default-4"
    paths:
      - build/
  artifacts:
    paths:
      - build/bin/
    expire_in: 1 day
  image: ubuntu-18.04-no-v8

compile-framework:
  script:
    - cd src/framework
    - mkdir -p build
    - cd build
    - cmake -GNinja ..
    - cmake --build .
  stage: build
  cache:
    # Increase the number in the cache key to start with
    # a fresh build cache. This is only useful in case of
    # build system bug and/or updates of ExternalProjects!
    key: "default-4"
    paths:
      - src/framework/build/
  artifacts:
    paths:
      - src/framework/build/bin/
      - src/framework/build/run_replay_tests.py
    expire_in: 1 day
  only:
    - schedules
  image: ubuntu-18.04-no-v8

run_replay_tests:
  script:
    - "echo running replay tests"
    # this will just do nothing if the repository is already cloned
    - "git lfs clone https://gitlab.com/robocup-small-size/autoref-tests.git"
    - "cd autoref-tests"
    - "git pull"
    - "cd .."
    - "cd cmake"
    - "python3 run_autoref_tests.py ../autoref-tests ../autoref/init.lua ../src/framework/build/bin/replay-cli"
  stage: test
  dependencies:
    - compile-framework
  cache:
    key: "replay-tests"
    paths:
    - autoref-tests
  only:
    - schedules
  image: ubuntu-18.04-no-v8

.test: &test_template
  script:
    - "echo running test \"$TEST_PATTERN\""
    - "cd build"
    - "cmake -GNinja .."
    - "ctest --output-on-failure -R \"$TEST_PATTERN\""
  stage: test
  cache:
    key: "tests"
    paths:
      - build/

tests:
  <<: *test_template
  variables:
    TEST_PATTERN: "."
